version: '3.8'

# Define named volumes for persistent data storage
volumes:
  qdrant_data:
  redis_data:

services:
  # RAG Backend Service
  rag_backend:
    build:
      context: ./rag_backend
    container_name: rag_backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - qdrant_db  # The backend depends on the vector database
    restart: always

  # Matrix Bot Service
  matrix_bot:
    build:
      context: ./matrixbot
    container_name: matrix_bot
    env_file:
      - .env
    depends_on:
      - rag_backend  # The bot depends on the backend API
      - redis_db    # The bot depends on Redis for session management
    restart: always
  
  # Qdrant Vector Database
  qdrant_db:
    image: qdrant/qdrant:latest
    container_name: qdrant_vector_db
    ports:
      - "6333:6333"
      - "6334:6334"
    env_file:
      - .env
    volumes:
      - qdrant_data:/qdrant/storage # Persists your vector data
    restart: always
  
  # Init script to create `rag_data` collection in Qdrant
  qdrant-init:
    image: alpine/curl:latest
    container_name: qdrant-init
    env_file:
      - .env
    volumes:
      - ./qdrant/entrypoint.sh:/usr/local/bin/entrypoint.sh
    depends_on:
      - qdrant_db
    entrypoint: ["/usr/local/bin/entrypoint.sh"]

  # Redis Database for caching
  redis_db:
    image: redis:latest
    container_name: redis_session_db
    volumes:
      - redis_data:/data # Persists Redis data
    restart: always

